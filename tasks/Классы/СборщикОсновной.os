#Использовать logos
// #Использовать progbar
#Использовать "../lib/cfe2cf"
#Использовать tempfiles


Перем ЭкспортироватьИсходникиИзФорматаЕДТ Экспорт;
Перем УдалятьИсходныеФайлыВФорматеКонфигуратора Экспорт;
Перем СборкаРасширения Экспорт;
Перем СборкаКонфигурации Экспорт;
Перем СборкаПортативная Экспорт;
Перем ВерсияЕДТ Экспорт;
Перем КаталогПлатформы Экспорт;

Перем Лог;
Перем МенеджерВременныхФайлов;
Перем КаталогСборки;
Перем КаталогРепозитория;
Перем КаталогИсходныхФайлов;
Перем ВременныйКаталогСборки;



Процедура ПодготовитьПустойКаталог(Каталог)
	Если ФС.Существует(Каталог) Тогда
		УдалитьФайлы(Каталог);
	КонецЕсли;
	
	ФС.ОбеспечитьКаталог(Каталог);
	
КонецПроцедуры

Процедура Инициализировать()
	Старт = СтартовыйСценарий();
	
	МассивИмениКаталога = СтрРазделить(Старт.Каталог, ПолучитьРазделительПути());
	МассивИмениКаталога.Удалить(МассивИмениКаталога.Количество() - 1);
	// МассивИмениКаталога.Удалить(МассивИмениКаталога.Количество() - 1);
	
	КаталогРепозитория = СтрСоединить(МассивИмениКаталога, ПолучитьРазделительПути());
	КаталогСборки = ОбъединитьПути(КаталогРепозитория, "build");
	
	МенеджерВременныхФайлов = Новый МенеджерВременныхФайлов();
	МенеджерВременныхФайлов.БазовыйКаталог = ОбъединитьПути(КаталогСборки,"tmp");
	
	РабочийКаталогРИНГ = МенеджерВременныхФайлов.НовоеИмяФайла();
	
	Лог = Новый Лог("app.build.logosFor1C");
	Лог.УстановитьУровень(УровниЛога.Отладка);
	
	ЭкспортироватьИсходникиИзФорматаЕДТ=Истина;
	УдалятьИсходныеФайлыВФорматеКонфигуратора=Истина;
	СборкаРасширения=Истина;
	СборкаКонфигурации=Истина;
КонецПроцедуры

Процедура ВыполнитьСборку() Экспорт
	ПередНачаломСборки();
	
	ПроектыДляКонвертации = Новый Массив();
	ПроектыДляКонвертации.Добавить("лЛогирование");
	
	//1. Конвертируем исходники в формат конфигуратора
	Если ЭкспортироватьИсходникиИзФорматаЕДТ Тогда
		Отказ = Ложь;
		
		Для Каждого ТекПроект Из ПроектыДляКонвертации Цикл
			КонвертерИсходников = Новый КонвертерИсходныхФайловВФорматКонфигуратора();
			КонвертерИсходников.ВерсияЕДТ=ВерсияЕДТ;
			КонвертерИсходников.УстановитьЛог(Лог);
			КонвертерИсходников.УстановитьКаталогИсходниковEDT(ОбъединитьПути(КаталогРепозитория,"src",ТекПроект));
			КонвертерИсходников.УстановитьКаталогРезультатаКонвертации(ОбъединитьПути(КаталогИсходныхФайлов, ТекПроект));
			Успешно = КонвертерИсходников.ВыполнитьКонвертацию();
			
			Если Не Успешно Тогда
				Лог.КритичнаяОшибка("Не удалось сконвертировать в формат конфигуратора проект " + ТекПроект);
				Отказ=Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если Отказ Тогда
			ПриЗавершенииСборки();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	КаталогСборкиПодВарианты = МенеджерВременныхФайлов.СоздатьКаталог();
	
	КаталогФайловСконвертированногоРасширения = ОбъединитьПути(КаталогСборкиПодВарианты, "Расширение");
	
	ИмяФайлаВарианта = "logosFor1C";
	ВерсияИсходников = ВерсияИсходников(ОбъединитьПути(КаталогИсходныхФайлов,"лЛогирование"));
	
	ИмяФайлаРасширения = ОбъединитьПути(КаталогСборки, ИмяФайлаВарианта + "_"+СтрЗаменить(ВерсияИсходников,".","_")+".cfe");
	// ФС.ОбеспечитьКаталог(ОбъединитьПути(КаталогСборки, ВариантСборки.Имя));
	
	СборщикРасширения = Новый СборщикРасширения();
	// СборщикРасширения.ВариантСборки = ВариантСборки;
	СборщикРасширения.УстановитьЛог(Лог);
	СборщикРасширения.УстановитьКаталогИсходныхФайлов(КаталогИсходныхФайлов);
	СборщикРасширения.УстановитьКаталогРезультатаСборки(КаталогФайловСконвертированногоРасширения);
	СборщикРасширения.УстановитьКаталогВременныхФайлов(ОбъединитьПути(КаталогСборкиПодВарианты,"cfe"));
	СборщикРасширения.УстановитьКаталогПлатформы(КаталогПлатформы);
	СборщикРасширения.ВыполнитьСборкуИсходников();
	Если СборкаРасширения Тогда
		Лог.Информация("Начинаю сборку расширения");
		
		СборщикРасширения.ВыполнитьСозданиеБинарногоФайла(ИмяФайлаРасширения);
		
		Лог.Информация("Сборка в расширение завершена");
	КонецЕсли;
	
	Если СборкаКонфигурации Тогда
		Лог.Информация("Начинаю сборку конфигурации");
		
		ИмяРасширения 			= "лЛогирование";
		ИмяФайлаКонфигурации 	= ОбъединитьПути(КаталогСборки, ИмяФайлаВарианта  + "_"+СтрЗаменить(ВерсияИсходников,".","_")+ ".cf");
		
		СборщикРасширения.ДобавитьИнформациюОСборкеВОбщийМодуль(Истина);
		
		Конвертор = Новый КонверторРасширений();
		Конвертор.ИсходныйПуть 				= КаталогФайловСконвертированногоРасширения;
		Конвертор.ИмяРасширения 			= ИмяРасширения;
		Конвертор.ИмяФайлаКонфигурации 		= ИмяФайлаКонфигурации;
		Конвертор.КаталогВременныхФайлов 	= МенеджерВременныхФайлов.СоздатьКаталог();
		Конвертор.ИмяКаталогаПлатформы		= КаталогПлатформы;
		Конвертор.ВыполнитьПреобразованиеИзИсходныхФайловРасширения();
		
		УдалитьФайлы(Конвертор.КаталогВременныхФайлов);
		
		Лог.Информация("Сборка конфигурации завершена");
	КонецЕсли;
	
	УдалитьФайлы(КаталогСборкиПодВарианты);
	
	ПриЗавершенииСборки();
КонецПроцедуры

Процедура ПередНачаломСборки()
	// ПодготовитьПустойКаталог(КаталогСборки);
	
	ВременныйКаталогСборки = МенеджерВременныхФайлов.СоздатьКаталог();
	// ФС.ОбеспечитьКаталог(РабочийКаталогРИНГ);
	
	КаталогИсходныхФайлов = ОбъединитьПути(КаталогСборки, "source");
	Если ЭкспортироватьИсходникиИзФорматаЕДТ Тогда
		ПодготовитьПустойКаталог(КаталогИсходныхФайлов);
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗавершенииСборки()
	МенеджерВременныхФайлов.Удалить();
	УдалитьФайлы(МенеджерВременныхФайлов.БазовыйКаталог);
	
	Если УдалятьИсходныеФайлыВФорматеКонфигуратора Тогда
		УдалитьФайлы(КаталогИсходныхФайлов);
	КонецЕсли;
	
КонецПроцедуры

Функция ВерсияИсходников(Каталог)
	ПроцессорXML = Новый СериализаторXML();
	
	ОписаниеОсновногоРасширения = ПроцессорXML.ПрочитатьИзФайла(ОбъединитьПути(Каталог, "Configuration.xml"));
	СвойстваКонфигурацииОсновногоРасширения = ОписаниеОсновногоРасширения["MetaDataObject"]._Элементы["Configuration"]._Элементы["Properties"];
	Возврат СвойстваКонфигурацииОсновногоРасширения["Version"];
	
КонецФункции

Инициализировать();