
// @unit-test
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура ПроверитьОтладка(Фреймворк) Экспорт

	лЛог.Инициализировать(Ложь);
	лЛог.ДобавитьСпособЛогирования("Память","%СОБЫТИЕ% - %СООБЩЕНИЕ%");
	лЛог.УстановитьИмяСобытияЛогирования("Тестирование.Отладка.Сервер");
	лЛог.УстановитьУровеньЛогирования("Отладка");
	
	лЛог.Отладка_("Сообщение ОТЛАДКА");

	лЛог.Информация_("Сообщение ИНФОРМАЦИЯ");

	лЛог.Предупреждение_("Сообщение ПРЕДУПРЕЖДЕНИЕ");

	лЛог.Ошибка_("Сообщение ОШИБКА");

	ЭталонноеСообщение =
	"Тестирование.Отладка.Сервер - Сообщение ОТЛАДКА
	|Тестирование.Отладка.Сервер - Сообщение ИНФОРМАЦИЯ
	|Тестирование.Отладка.Сервер - Сообщение ПРЕДУПРЕЖДЕНИЕ
	|Тестирование.Отладка.Сервер - Сообщение ОШИБКА
	|";

	СообщенияЛога = лЛог.ЛогИзПамяти(Истина);
	
	Фреймворк.ПроверитьРавенство(ЭталонноеСообщение, СообщенияЛога);
	
КонецПроцедуры

// @unit-test
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура ПроверитьИнформация(Фреймворк) Экспорт

	лЛог.Инициализировать(Ложь);
	лЛог.ДобавитьСпособЛогирования("Память","%СОБЫТИЕ% - %СООБЩЕНИЕ%");
	лЛог.УстановитьИмяСобытияЛогирования("Тестирование.Информация.Сервер");
	лЛог.УстановитьУровеньЛогирования("Информация");
	
	лЛог.Отладка_("Сообщение ОТЛАДКА");

	лЛог.Информация_("Сообщение ИНФОРМАЦИЯ");

	лЛог.Предупреждение_("Сообщение ПРЕДУПРЕЖДЕНИЕ");

	лЛог.Ошибка_("Сообщение ОШИБКА");

	ЭталонноеСообщение =
	"Тестирование.Информация.Сервер - Сообщение ИНФОРМАЦИЯ
	|Тестирование.Информация.Сервер - Сообщение ПРЕДУПРЕЖДЕНИЕ
	|Тестирование.Информация.Сервер - Сообщение ОШИБКА
	|";

	СообщенияЛога = лЛог.ЛогИзПамяти(Истина);
	
	Фреймворк.ПроверитьРавенство(ЭталонноеСообщение, СообщенияЛога);
	
КонецПроцедуры

// @unit-test
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура ПроверитьПредупреждение(Фреймворк) Экспорт

	лЛог.Инициализировать(Ложь);
	лЛог.ДобавитьСпособЛогирования("Память","%СОБЫТИЕ% - %СООБЩЕНИЕ%");
	лЛог.УстановитьИмяСобытияЛогирования("Тестирование.Предупреждение.Сервер");
	лЛог.УстановитьУровеньЛогирования("Предупреждение");
	
	лЛог.Отладка_("Сообщение ОТЛАДКА");

	лЛог.Информация_("Сообщение ИНФОРМАЦИЯ");

	лЛог.Предупреждение_("Сообщение ПРЕДУПРЕЖДЕНИЕ");

	лЛог.Ошибка_("Сообщение ОШИБКА");

	ЭталонноеСообщение =
	"Тестирование.Предупреждение.Сервер - Сообщение ПРЕДУПРЕЖДЕНИЕ
	|Тестирование.Предупреждение.Сервер - Сообщение ОШИБКА
	|";

	СообщенияЛога = лЛог.ЛогИзПамяти(Истина);
	
	Фреймворк.ПроверитьРавенство(ЭталонноеСообщение, СообщенияЛога);
	
КонецПроцедуры

// @unit-test
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура ПроверитьОшибка(Фреймворк) Экспорт

	лЛог.Инициализировать(Ложь);
	лЛог.ДобавитьСпособЛогирования("Память","%СОБЫТИЕ% - %СООБЩЕНИЕ%");
	лЛог.УстановитьИмяСобытияЛогирования("Тестирование.Ошибка.Сервер");
	лЛог.УстановитьУровеньЛогирования("Ошибка");
	
	лЛог.Отладка_("Сообщение ОТЛАДКА");

	лЛог.Информация_("Сообщение ИНФОРМАЦИЯ");

	лЛог.Предупреждение_("Сообщение ПРЕДУПРЕЖДЕНИЕ");

	лЛог.Ошибка_("Сообщение ОШИБКА");

	ЭталонноеСообщение =
	"Тестирование.Ошибка.Сервер - Сообщение ОШИБКА
	|";

	СообщенияЛога = лЛог.ЛогИзПамяти(Истина);
	
	Фреймворк.ПроверитьРавенство(ЭталонноеСообщение, СообщенияЛога);
	
КонецПроцедуры