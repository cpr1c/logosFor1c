
// @unit-test:init
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура ПроверитьИнициализациюПоУмолчанию(Фреймворк) Экспорт
	
	лЛог.Инициализировать(Ложь);
	ПараметрыЛогирования = лЛог.ПараметрыЛогирования();
	
	Фреймворк.ПроверитьЛожь(ПараметрыЛогирования.Отключен);
	
	ЭталонноеЗначение = ПредопределенноеЗначение("Перечисление.лУровниЛогирования.ОШИБКА");
	ПроверяемоеЗначение = ПараметрыЛогирования.УровеньЛогирования;
	
	Фреймворк.ПроверитьРавенство(ЭталонноеЗначение, ПроверяемоеЗначение);
	
	Фреймворк.ПроверитьЗаполненность(ПараметрыЛогирования.УровеньЛогированияПредставление);
	
	Фреймворк.ПроверитьЗаполненность(ПараметрыЛогирования.ПриоритетУровняЛогирования);
	
	Фреймворк.ПроверитьНеЗаполненность(ПараметрыЛогирования.СпособыЛогирования);
	
	Фреймворк.ПроверитьЗаполненность(ПараметрыЛогирования.КлючСеанса);
				
КонецПроцедуры

// @unit-test:init
// Параметры:
// 	Фреймворк - ФреймворкТестирования - Фреймворк тестирования
Процедура ПроверитьИнициализациюПоИмениНастройки(Фреймворк) Экспорт
	
	лЛог.Инициализировать(Ложь, "unit-test");
	ПараметрыЛогирования = лЛог.ПараметрыЛогирования();
	
	ЭталонноеЗначение = ПредопределенноеЗначение("Перечисление.лУровниЛогирования.ОШИБКА");
	ПроверяемоеЗначение = ПараметрыЛогирования.УровеньЛогирования;
	
	Фреймворк.ПроверитьРавенство(ЭталонноеЗначение, ПроверяемоеЗначение);
	
КонецПроцедуры