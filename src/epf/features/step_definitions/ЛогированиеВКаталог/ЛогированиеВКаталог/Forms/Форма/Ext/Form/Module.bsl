
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДобавляюВЛогСИменемВариантЛогированияКаталогФайловВКонтекстеКаталогСИменем(Парам01,Парам02,Парам03)","ДобавляюВЛогСИменемВариантЛогированияКаталогФайловВКонтекстеКаталогСИменем","И добавляю в лог с именем """" вариант логирования КаталогФайлов в контексте """" каталог с именем ""Логи"" с шаблоном имени файла """"","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФайлеЛогированияКоличествоСтрокРавно(Парам01,Парам02)","ВФайлеЛогированияКоличествоСтрокРавно","и в каталоге логирования ""Логи"" количество строк равно 1","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПолучаюИмяВременногоКаталогаИСохраняюЕгоВПеременную(Парам01)","ЯПолучаюИмяВременногоКаталогаИСохраняюЕгоВПеременную","И я получаю имя временного каталога и сохраняю его в переменную ""Логи""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДобавляюВЛогСИменемВариантЛогированияКаталогФайловВКонтекстеКаталогСИменемСШаблономИмениФайла(Парам01,Парам02,Парам03,Парам04)","ДобавляюВЛогСИменемВариантЛогированияКаталогФайловВКонтекстеКаталогСИменемСШаблономИмениФайла","И добавляю в лог с именем """" вариант логирования КаталогФайлов в контексте """" каталог с именем ""Логи"" с шаблоном имени файла """"","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВКаталогеЛогированияКоличествоСтрокРавно(Парам01,Парам02)","ВКаталогеЛогированияКоличествоСтрокРавно","и в каталоге логирования ""Логи"" количество строк равно 1","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФайлахКаталогаСуммарноКоличествоСтрокРавно(Парам01,Парам02)","ВФайлахКаталогаСуммарноКоличествоСтрокРавно","И в файлах каталога ""Логи"" суммарно количество строк равно 1","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПолучаюИмяВременногоКаталогаНаСервереИСохраняюЕгоВПеременную(Парам01)","ЯПолучаюИмяВременногоКаталогаНаСервереИСохраняюЕгоВПеременную","И я получаю имя временного каталога на сервере и сохраняю его в переменную ""НаСервере""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВКаталогеЕстьФайлСИменем(Парам01,Парам02)","ВКаталогеЕстьФайлСИменем","и в каталоге ""ОбщийКаталог"" есть файл с именем ""Привет - log.txt""","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	Контекст.Вставить("Каталоги", Новый Структура);	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	Для Каждого КлючЗначение ИЗ Контекст.Каталоги Цикл
		УдалитьФайлы(КлючЗначение.Значение);
	КонецЦикла;
КонецФункции



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И я получаю имя временного каталога и сохраняю его в переменную "Логи"
//@ЯПолучаюИмяВременногоКаталогаИСохраняюЕгоВПеременную(Парам01)
Функция ЯПолучаюИмяВременногоКаталогаИСохраняюЕгоВПеременную(ИмяКаталога) Экспорт
	Контекст.Каталоги.Вставить(ИмяКаталога, ПолучитьИмяВременногоФайла());
	
	СоздатьКаталог(Контекст.Каталоги[ИмяКаталога]);
КонецФункции

&НаКлиенте
//И добавляю в лог с именем "" вариант логирования КаталогФайлов в контексте "" каталог с именем "Логи" с шаблоном имени файла ""
//@ДобавляюВЛогСИменемВариантЛогированияКаталогФайловВКонтекстеКаталогСИменемСШаблономИмениФайла(Парам01,Парам02,Парам03,Парам04)
Функция ДобавляюВЛогСИменемВариантЛогированияКаталогФайловВКонтекстеКаталогСИменемСШаблономИмениФайла(ИмяЛога,КонтекстЛогирования,ИмяКаталога,ШаблонИмениФайла) Экспорт
	ТекЛог = ИмяЛога;
	Если Не ЗначениеЗаполнено(ТекЛог) Тогда
		ТекЛог = Неопределено;
	КонецЕсли;
	лЛог.ДобавитьСпособЛогированияКаталогФайлов(Контекст.Каталоги[ИмяКаталога], ШаблонИмениФайла, ТекЛог, КонтекстЛогирования);
КонецФункции

&НаКлиенте
//и в каталоге логирования "Логи" количество строк равно 1
//@ВКаталогеЛогированияКоличествоСтрокРавно(Парам01,Парам02)
Функция ВКаталогеЛогированияКоличествоСтрокРавно(ИмяКаталога,КоличествоФайлов) Экспорт
	Файлы = НайтиФайлы(Контекст.Каталоги[ИмяКаталога],"*");
	
	Ванесса.ПроверитьРавенство(Файлы.Количество(), КоличествоФайлов);
КонецФункции

&НаКлиенте
//И в файлах каталога "Логи" суммарно количество строк равно 1
//@ВФайлахКаталогаСуммарноКоличествоСтрокРавно(Парам01,Парам02)
Функция ВФайлахКаталогаСуммарноКоличествоСтрокРавно(ИмяКаталога,СуммарноеКоличествоСтрок) Экспорт
	Файлы = НайтиФайлы(Контекст.Каталоги[ИмяКаталога],"*");
	
	Колво = 0;
	Для Каждого Текфайл Из Файлы Цикл
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(Текфайл.ПолноеИмя);
		
		Колво=Колво+Текст.КоличествоСтрок();
	КонецЦикла;
	
	Ванесса.ПроверитьРавенство(Колво, СуммарноеКоличествоСтрок);
КонецФункции

&НаКлиенте
//И я получаю имя временного каталога на сервере и сохраняю его в переменную "НаСервере"
//@ЯПолучаюИмяВременногоКаталогаНаСервереИСохраняюЕгоВПеременную(Парам01)
Функция ЯПолучаюИмяВременногоКаталогаНаСервереИСохраняюЕгоВПеременную(ИмяКаталога) Экспорт
	Контекст.Каталоги.Вставить(ИмяКаталога, ИмяВременногоФайлаНаСервере());
КонецФункции

&НаСервере
Функция ИмяВременногоФайлаНаСервере()
	Имякаталога = ПолучитьИмяВременногоФайла();	
	СоздатьКаталог(ИмяКаталога);
	Возврат Имякаталога;
КонецФункции

&НаКлиенте
//и в каталоге "ОбщийКаталог" есть файл с именем "Привет - log.txt"
//@ВКаталогеЕстьФайлСИменем(Парам01,Парам02)
Функция ВКаталогеЕстьФайлСИменем(Имякаталога,ИмяФайла) Экспорт
	
	Файлы = НайтиФайлы(Контекст.Каталоги[ИмяКаталога],"*");
	
	ЕстьФайл = Ложь;
	
	Для Каждого Файл Из Файлы Цикл
		Если Файл.Имя = ИмяФайла Тогда
			ЕстьФайл = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	
	Ванесса.Проверить(ЕстьФайл);
КонецФункции
