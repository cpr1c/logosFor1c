
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыключаюИспользованиеЛогаСИменем(Парам01)","ЯВыключаюИспользованиеЛогаСИменем","и я выключаю использование лога с именем """"","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВключаюИспользованиеЛогаСИменем(Парам01)","ЯВключаюИспользованиеЛогаСИменем","и я включаю использование лога с именем """"","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюЛогСИменем(Парам01)","ЯУдаляюЛогСИменем","И я удаляю лог с именем """"","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	лЛог.ОчиститьСписокЛогов();
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//и я выключаю использование лога с именем ""
//@ЯВыключаюИспользованиеЛогаСИменем(Парам01)
Функция ЯВыключаюИспользованиеЛогаСИменем(ИмяЛога) Экспорт
	ТекИмяЛога = ИмяЛога;
	Если НЕ ЗначениеЗаполнено(ТекИмяЛога) Тогда
		ТекИмяЛога = Неопределено;
	КонецЕсли;
	лЛог.Отключить(ТекИмяЛога);
КонецФункции

&НаКлиенте
//и я включаю использование лога с именем ""
//@ЯВключаюИспользованиеЛогаСИменем(Парам01)
Функция ЯВключаюИспользованиеЛогаСИменем(ИмяЛога) Экспорт
	ТекИмяЛога = ИмяЛога;
	Если НЕ ЗначениеЗаполнено(ТекИмяЛога) Тогда
		ТекИмяЛога = Неопределено;
	КонецЕсли;
	лЛог.Включить(ТекИмяЛога);
КонецФункции

&НаКлиенте
//И я удаляю лог с именем ""
//@ЯУдаляюЛогСИменем(Парам01)
Функция ЯУдаляюЛогСИменем(ИмяЛога) Экспорт
	ТекИмяЛога = ИмяЛога;
	Если НЕ ЗначениеЗаполнено(ТекИмяЛога) Тогда
		ТекИмяЛога = Неопределено;
	КонецЕсли;
	лЛог.ЗавершитьЛогирование(ТекИмяЛога);
КонецФункции
