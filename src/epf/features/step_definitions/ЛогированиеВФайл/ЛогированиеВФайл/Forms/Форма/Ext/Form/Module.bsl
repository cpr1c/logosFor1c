
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПолучаюИмяВременногоФайлаНаКлиенте()","ЯПолучаюИмяВременногоФайлаНаКлиенте","И я получаю имя временного файла на клиенте","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДобавляюВЛогСИменемВариантЛогированияФайлВКонтексте(Парам01,Парам02)","ДобавляюВЛогСИменемВариантЛогированияФайлВКонтексте","И добавляю в лог с именем """" вариант логирования Файл в контексте """"","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФайлеЛогированияКоличествоСтрокРавно(Парам01)","ВФайлеЛогированияКоличествоСтрокРавно","и в файле логирования количество строк равно 1","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПолучаюИмяВременногоФайлаИСохраняюЕгоВПеременную(Парам01)","ЯПолучаюИмяВременногоФайлаИСохраняюЕгоВПеременную","И я получаю имя временного файла и сохраняю его в переменную ""ФайлНаКлиенте""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДобавляюВЛогСИменемВариантЛогированияФайлВКонтекстеФайлСИменем(Парам01,Парам02,Парам03)","ДобавляюВЛогСИменемВариантЛогированияФайлВКонтекстеФайлСИменем","И добавляю в лог с именем """" вариант логирования Файл в контексте """" файл с именем ""ФайлНаКлиенте""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПолучаюИмяВременногоФайлаНаСервереИСохраняюЕгоВПеременную(Парам01)","ЯПолучаюИмяВременногоФайлаНаСервереИСохраняюЕгоВПеременную","И я получаю имя временного файла на сервере и сохраняю его в переменную ""ФайлНаСервере""","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	Контекст.Вставить("Файлы", Новый Структура);	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	Для Каждого КлючЗначение ИЗ Контекст.Файлы Цикл
		УдалитьФайлы(КлючЗначение.Значение);
	КонецЦикла;
КонецФункции



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиентеНаСервереБезКонтекста
Функция ВФайлеЛогированияКоличествоСтрок(ИмяФайла)
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ИмяФайла);
	
	Возврат Текст.КоличествоСтрок();
КонецФункции

&НаКлиенте
//И я получаю имя временного файла и сохраняю его в переменную "ФайлНаКлиенте"
//@ЯПолучаюИмяВременногоФайлаИСохраняюЕгоВПеременную(Парам01)
Функция ЯПолучаюИмяВременногоФайлаИСохраняюЕгоВПеременную(ИмяФайла) Экспорт
	Контекст.Файлы.Вставить(ИмяФайла, ПолучитьИмяВременногоФайла("txt"));
КонецФункции

&НаКлиенте
//И добавляю в лог с именем "" вариант логирования Файл в контексте "" файл с именем "ФайлНаКлиенте"
//@ДобавляюВЛогСИменемВариантЛогированияФайлВКонтекстеФайлСИменем(Парам01,Парам02,Парам03)
Функция ДобавляюВЛогСИменемВариантЛогированияФайлВКонтекстеФайлСИменем(ИмяЛога,КонтекстЛогирования,ИмяФайла) Экспорт
	
	ТекЛог = ИмяЛога;
	Если Не ЗначениеЗаполнено(ТекЛог) Тогда
		ТекЛог = Неопределено;
	КонецЕсли;
	
	лЛог.ДобавитьСпособЛогированияФайл(Контекст.Файлы[ИмяФайла], ТекЛог, КонтекстЛогирования);
КонецФункции

&НаКлиенте
//и в файле логирования "ФайлНаКлиенте" количество строк равно 1
//@ВФайлеЛогированияКоличествоСтрокРавно(Парам01,Парам02)
Функция ВФайлеЛогированияКоличествоСтрокРавно(ИмяФайла,ОжидаемоеКоличество) Экспорт
	Ванесса.ПроверитьРавенство(ВФайлеЛогированияКоличествоСтрок(Контекст.Файлы[ИмяФайла]),ОжидаемоеКоличество);
КонецФункции

&НаКлиенте
//И я получаю имя временного файла на сервере и сохраняю его в переменную "ФайлНаСервере"
//@ЯПолучаюИмяВременногоФайлаНаСервереИСохраняюЕгоВПеременную(Парам01)
Функция ЯПолучаюИмяВременногоФайлаНаСервереИСохраняюЕгоВПеременную(ИмяФайла) Экспорт
	Контекст.Файлы.Вставить(ИмяФайла, ИмяВременногоФайлаНаСервере());
КонецФункции

&НаСервере
Функция ИмяВременногоФайлаНаСервере()
	Возврат ПолучитьИмяВременногоФайла("txt");	
КонецФункции
