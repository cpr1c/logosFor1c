
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВРегистреЛоговСодержатсяТолькоСообщенияИзТаблицы(ТабПарам)","ВРегистреЛоговСодержатсяТолькоСообщенияИзТаблицы","И в регистре логов содержатся только сообщения из таблицы","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВРегистреЛоговСодержатсяТолькоСообщениеПоШаблону(Парам01)","ВРегистреЛоговСодержатсяТолькоСообщениеПоШаблону","И в регистре логов содержатся только сообщение по шаблону ""____.__.__ __:__:__ - ИНФОРМАЦИЯ - Привет. Это первый лог в базе""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУстанавливаюШаблонСообщенияЛогированияВЛогСИменем(Парам01,Парам02)","ЯУстанавливаюШаблонСообщенияЛогированияВЛогСИменем","И я устанавливаю шаблон сообщения логирования ""%УРОВЕНЬ% - %СООБЩЕНИЕ%"" в лог с именем """"","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	лЛог.ОчиститьСписокЛогов();
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////
&НаСервере
Функция ЕстьСообщениеВРегистреЛОгов(ШаблонСообщения)
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	лСообщенияЛогирования.ТекстСообщения КАК ТекстСообщения
	|ИЗ
	|	РегистрСведений.лСообщенияЛогирования КАК лСообщенияЛогирования
	|ГДЕ
	|	лСообщенияЛогирования.ТекстСообщения ПОДОБНО &ТекстСообщения";
	Запрос.УстановитьПараметр("ТекстСообщения", ШаблонСообщения);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
КонецФункции

&НаКлиенте
//И в регистре логов содержатся только сообщение по шаблону "% - ИНФОРМАЦИЯ - Привет. Это первый лог в базе"
//@ВРегистреЛоговСодержатсяТолькоСообщениеПоШаблону(Парам01)
Функция ВРегистреЛоговСодержатсяТолькоСообщениеПоШаблону(ШаблонРезультатаСообщения) Экспорт
	Ванесса.Проверить(ЕстьСообщениеВРегистреЛОгов(ШаблонРезультатаСообщения));
КонецФункции

&НаКлиенте
//И я устанавливаю шаблон сообщения логирования "%УРОВЕНЬ% - %СООБЩЕНИЕ%" в лог с именем ""
//@ЯУстанавливаюШаблонСообщенияЛогированияВЛогСИменем(Парам01,Парам02)
Функция ЯУстанавливаюШаблонСообщенияЛогированияВЛогСИменем(ШаблонСообщения,ИмяЛога) Экспорт
	ТекЛог = ИмяЛога;
	Если Не ЗначениеЗаполнено(ИмяЛога) Тогда
		ТекЛог = Неопределено;
	КонецЕсли;
	
	лЛог.УстановитьШаблонСообщения(ШаблонСообщения, ТекЛог);
КонецФункции
